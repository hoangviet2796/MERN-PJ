{"version":3,"sources":["places/pages/UpdatePlace.js"],"names":["UpdatePlace","auth","useContext","AuthContext","placeId","useParams","useState","identiedPlace","setIdentiedPlace","useHttp","isLoading","error","sendRequest","errorHandler","useForm","title","value","isValid","description","address","image","formState","inputHandler","setFormData","useEffect","process","data","place","fetchPlaces","history","useHistory","updatePlaceHandler","event","preventDefault","formData","FormData","append","inputs","Authorization","token","push","userId","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","valid","VALIDATOR_MINLENGTH","disabled"],"mappings":"+iNAoKeA,UAlJf,WACE,IAAMC,EAAOC,qBAAWC,KAClBC,EAAUC,cAAYD,QAC5B,EAA0CE,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwDC,cAAhDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,aAEvC,EAA+CC,YAC7C,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAnBF,mBAAOI,EAAP,KAAkBC,EAAlB,KAAgCC,EAAhC,KAsBAC,qBAAU,YACS,uCAAG,6GAEGZ,EAAY,GAAD,OACzBa,6CADyB,mBACmBrB,IAHjC,OAEVsB,EAFU,OAKhBlB,EAAiBkB,EAAKC,OALN,uGAAH,qDAQjBC,KACC,CAAChB,EAAaR,IAEjBoB,qBAAU,WACJjB,GACFgB,EACE,CACER,MAAO,CACLC,MAAOT,EAAcQ,MACrBE,SAAS,GAEXC,YAAa,CACXF,MAAOT,EAAcW,YACrBD,SAAS,GAEXE,QAAS,CACPH,MAAOT,EAAcY,QACrBF,SAAS,GAEXG,MAAO,CACLJ,MAAOT,EAAca,MACrBH,SAAS,KAGb,KAGH,CAACM,EAAahB,IAEjB,IAAMsB,EAAUC,cACVC,EAAkB,uCAAG,WAAOC,GAAP,8EACzBA,EAAMC,kBACAC,EAAW,IAAIC,UACZC,OAAO,QAASf,EAAUgB,OAAOtB,MAAMC,OAChDkB,EAASE,OAAO,cAAef,EAAUgB,OAAOnB,YAAYF,OAC5DkB,EAASE,OAAO,UAAWf,EAAUgB,OAAOlB,QAAQH,OACpDkB,EAASE,OAAO,QAASf,EAAUgB,OAAOjB,MAAMJ,OANvB,kBAQjBJ,EAAY,GAAD,OACZa,6CADY,mBACgCrB,GAC/C,QACA8B,EACA,CACEI,cAAe,UAAYrC,EAAKsC,QAbb,OAgBvBV,EAAQW,KAAR,WAAiBvC,EAAKwC,OAAtB,YAhBuB,4GAAH,sDAoBxB,OAAKpB,EAAUgB,OAAOtB,MAAMC,MAW1B,oCACE,kBAAC,IAAD,CAAYL,MAAOA,EAAO+B,QAAS7B,IACnC,0BAAM8B,UAAU,aAAaC,SAAUb,GACpCrB,GAAa,kBAAC,IAAD,CAAgBmC,WAAS,IACvC,kBAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAAS/B,EACTN,MAAOK,EAAUgB,OAAOtB,MAAMC,MAC9BsC,MAAOjC,EAAUgB,OAAOtB,MAAME,UAEhC,kBAAC,IAAD,CACE6B,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACK,YAAoB,IACjCH,UAAU,4DACVC,QAAS/B,EACTN,MAAOK,EAAUgB,OAAOnB,YAAYF,MACpCsC,MAAOjC,EAAUgB,OAAOnB,YAAYD,UAEtC,kBAAC,IAAD,CACE6B,GAAG,UACHC,QAAQ,WACRE,MAAM,UACNC,WAAY,CAACC,eACbC,UAAU,gCACVC,QAAS/B,EACTN,MAAOK,EAAUgB,OAAOlB,QAAQH,MAChCsC,MAAOjC,EAAUgB,OAAOlB,QAAQF,UAElC,kBAAC,IAAD,CACE6B,GAAG,QACHO,QAAS/B,EACT8B,UAAU,oDAEZ,kBAAC,IAAD,CAAQJ,KAAK,SAASQ,UAAWnC,EAAUJ,SAA3C,YAjDF,yBAAK0B,UAAU,UACb,kBAAC,IAAD,KACE","file":"static/js/7.d7bda359.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/Loading/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/Loading/ErrorModal\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload/ImageUpload\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/utils/validators\";\r\nimport \"./Place.css\";\r\nimport { useForm } from \"../../shared/hooks/useForm\";\r\nimport { useHttp } from \"../../shared/hooks/useHttp\";\r\n\r\nfunction UpdatePlace() {\r\n  const auth = useContext(AuthContext);\r\n  const placeId = useParams().placeId;\r\n  const [identiedPlace, setIdentiedPlace] = useState();\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttp();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: true,\r\n      },\r\n    },\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setIdentiedPlace(data.place);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, placeId]);\r\n\r\n  useEffect(() => {\r\n    if (identiedPlace) {\r\n      setFormData(\r\n        {\r\n          title: {\r\n            value: identiedPlace.title,\r\n            isValid: true,\r\n          },\r\n          description: {\r\n            value: identiedPlace.description,\r\n            isValid: true,\r\n          },\r\n          address: {\r\n            value: identiedPlace.address,\r\n            isValid: true,\r\n          },\r\n          image: {\r\n            value: identiedPlace.image,\r\n            isValid: true,\r\n          },\r\n        },\r\n        true\r\n      );\r\n    }\r\n  }, [setFormData, identiedPlace]);\r\n\r\n  const history = useHistory();\r\n  const updatePlaceHandler = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"title\", formState.inputs.title.value);\r\n    formData.append(\"description\", formState.inputs.description.value);\r\n    formData.append(\"address\", formState.inputs.address.value);\r\n    formData.append(\"image\", formState.inputs.image.value);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(`/${auth.userId}/places`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (!formState.inputs.title.value) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Nothing</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <form className=\"place-form\" onSubmit={updatePlaceHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n          value={formState.inputs.title.value}\r\n          valid={formState.inputs.title.isValid}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n          value={formState.inputs.description.value}\r\n          valid={formState.inputs.description.isValid}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"textarea\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n          value={formState.inputs.address.value}\r\n          valid={formState.inputs.address.isValid}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please choose valid file (*.jpg, *.png, *.jpeg)\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          UPDATE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdatePlace;\r\n"],"sourceRoot":""}