{"version":3,"sources":["users/pages/Auth.js"],"names":["Auth","auth","useContext","AuthContext","useState","isSignIn","setIsSignIn","useHttp","isLoading","error","sendRequest","errorHandler","useForm","email","value","isValid","password","formState","inputHandler","setFormData","signUpHandler","event","preventDefault","process","JSON","stringify","name","inputs","data","login","userId","token","signInHandler","onClear","className","asOverlay","inverse","onClick","undefined","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled"],"mappings":"ihNAsJeA,UArIf,WACE,IAAMC,EAAOC,qBAAWC,KACxB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAwDC,cAAhDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,aAEvC,EAA+CC,YAC7C,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,SAAU,CACRF,MAAO,GACPC,SAAS,KAGb,GAXF,mBAAOE,EAAP,KAAkBC,EAAlB,KAAgCC,EAAhC,KAmCMC,EAAa,uCAAG,WAAOC,GAAP,8EACpBA,EAAMC,iBADc,kBAGCZ,EACjBa,0DACA,OACAC,KAAKC,UAAU,CACbC,KAAMT,EAAUU,OAAOD,KAAKZ,MAC5BD,MAAOI,EAAUU,OAAOd,MAAMC,MAC9BE,SAAUC,EAAUU,OAAOX,SAASF,QAEtC,CACE,eAAgB,qBAZF,OAGZc,EAHY,OAelB3B,EAAK4B,MAAMD,EAAKE,OAAQF,EAAKG,OAfX,yGAAH,sDAmBbC,EAAa,uCAAG,WAAOX,GAAP,8EACpBA,EAAMC,iBADc,kBAGCZ,EACjBa,yDACA,OACAC,KAAKC,UAAU,CACbZ,MAAOI,EAAUU,OAAOd,MAAMC,MAC9BE,SAAUC,EAAUU,OAAOX,SAASF,QAEtC,CACE,eAAgB,qBAXF,OAGZc,EAHY,OAclB3B,EAAK4B,MAAMD,EAAKE,OAAQF,EAAKG,OAdX,yGAAH,sDAkBnB,OACE,oCACE,kBAAC,IAAD,CAAYtB,MAAOA,EAAOwB,QAAStB,IACnC,kBAAC,IAAD,CAAMuB,UAAU,WACb1B,GAAa,kBAAC,IAAD,CAAgB2B,WAAS,IACvC,yBAAKD,UAAU,UACb,kBAAC,IAAD,CAAQE,QAAS/B,EAAUgC,QAzDhB,WACjBlB,EAAY,2BAELF,EAAUU,QAFN,IAGPD,KAAM,CACJZ,MAAO,GACPC,SAAS,MAGb,GAEFT,GAAY,KA8CN,WAGA,kBAAC,IAAD,CAAQ8B,SAAU/B,EAAUgC,QAnEjB,WACjBlB,EAAY,2BACLF,EAAUU,QADN,IACcD,KAAM,CAAEZ,WAAOwB,EAAWvB,SAAS,KAC1DE,EAAUU,OAAOd,MAAME,SAAWE,EAAUU,OAAOX,SAASD,SAE9DT,GAAY,KA8DN,YAIF,0BACE4B,UAAU,YACVK,SAAUlC,EAAW2B,EAAgBZ,IAEnCf,GACA,kBAAC,IAAD,CACEmC,GAAG,OACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,OACNC,WAAY,CAACC,eACbC,UAAU,6BACVC,QAAS7B,IAGb,kBAAC,IAAD,CACEsB,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACI,eACbF,UAAU,8BACVC,QAAS7B,IAEX,kBAAC,IAAD,CACEsB,GAAG,WACHC,QAAQ,QACRC,KAAK,WACLC,MAAM,WACNC,WAAY,CAACK,YAAoB,IACjCH,UAAU,yDACVC,QAAS7B,IAEX,kBAAC,IAAD,CAAQwB,KAAK,SAASQ,UAAWjC,EAAUF,SACxCV,EAAW,UAAY","file":"static/js/8.80b714c8.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/Loading/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/Loading/ErrorModal\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport \"./Auth.css\";\r\nimport { useForm } from \"../../shared/hooks/useForm\";\r\nimport { useHttp } from \"../../shared/hooks/useHttp\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\n\r\nfunction Auth() {\r\n  const auth = useContext(AuthContext);\r\n  const [isSignIn, setIsSignIn] = useState(false);\r\n\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttp();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const signInMode = () => {\r\n    setFormData(\r\n      { ...formState.inputs, name: { value: undefined, isValid: true } },\r\n      formState.inputs.email.isValid && formState.inputs.password.isValid\r\n    );\r\n    setIsSignIn(true);\r\n  };\r\n  const signUpMode = () => {\r\n    setFormData(\r\n      {\r\n        ...formState.inputs,\r\n        name: {\r\n          value: \"\",\r\n          isValid: false,\r\n        },\r\n      },\r\n      false\r\n    );\r\n    setIsSignIn(false);\r\n  };\r\n\r\n  const signUpHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          name: formState.inputs.name.value,\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(data.userId, data.token);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const signInHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(data.userId, data.token);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Card className=\"wrapper\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"center\">\r\n          <Button inverse={isSignIn} onClick={signUpMode}>\r\n            SIGN UP\r\n          </Button>\r\n          <Button inverse={!isSignIn} onClick={signInMode}>\r\n            SIGN IN\r\n          </Button>\r\n        </div>\r\n        <form\r\n          className=\"auth-form\"\r\n          onSubmit={isSignIn ? signInHandler : signUpHandler}\r\n        >\r\n          {!isSignIn && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Email\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password (at least 6 characters).\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isSignIn ? \"SIGN IN\" : \"SIGN UP\"}\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}