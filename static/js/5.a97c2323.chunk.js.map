{"version":3,"sources":["shared/components/UIElements/Map/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/Userplaces.js"],"names":["MyMapComponent","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","defaultZoom","zoom","defaultCenter","center","isMarkerShown","position","Map","mapRef","useRef","ref","className","PlaceItem","auth","useContext","AuthContext","useHttp","isLoading","error","sendRequest","errorHandler","useState","showMap","setShowMap","showDeleteModal","setShowDeleteModal","closeMapHandler","closeDeleteModalHandler","history","useHistory","confirmDeleteHandler","process","id","Authorization","token","push","userId","onDelete","ErrorModal","onClear","LoadingSpinner","asOverlay","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","src","image","alt","title","description","isLoggedIn","creatorId","to","PlaceList","items","length","map","place","key","imageUrl","creator","location","PLACE","UserPlace","userID","useParams","places","setPlaces","useEffect","data","fetchPlaces","pid","prev","filter","p"],"mappings":"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","file":"static/js/5.a97c2323.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport { compose, withProps } from \"recompose\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n\r\nconst MyMapComponent = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBMY-ytjTKALmIg2vDcvdnTj0IwTmQSjp8&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `300px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)((props) => (\r\n  <GoogleMap defaultZoom={props.zoom} defaultCenter={props.center}>\r\n    {props.isMarkerShown && <Marker position={props.center} />}\r\n  </GoogleMap>\r\n));\r\n\r\nfunction Map(props) {\r\n  const mapRef = useRef();\r\n\r\n  return (\r\n    <div ref={mapRef} className={`map ${props.className}`}>\r\n      <MyMapComponent isMarkerShown center={props.center} zoom={props.zoom} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card/Card\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal/Modal\";\nimport Map from \"../../shared/components/UIElements/Map/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/Loading/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/Loading/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttp } from \"../../shared/hooks/useHttp\";\nimport \"./PlaceItem.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, errorHandler } = useHttp();\n  const [showMap, setShowMap] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const closeDeleteModalHandler = () => setShowDeleteModal(false);\n  const openDeleteModalHandler = () => setShowDeleteModal(true);\n  const history = useHistory();\n  const confirmDeleteHandler = async () => {\n    try {\n      setShowDeleteModal(false);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(`/${auth.userId}/places`);\n    } catch (err) {}\n    props.onDelete(props.id);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={errorHandler} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showDeleteModal}\n        onCancel={closeDeleteModalHandler}\n        header={`Delete`}\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <>\n            <Button inverse onClick={closeDeleteModalHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </>\n        }\n      >\n        <p>Are you sure want to delete this place?</p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.isLoggedIn && auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.isLoggedIn && auth.userId === props.creatorId && (\n              <Button danger onClick={openDeleteModalHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card/Card\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport PlaceItem from \"./PlaceItem\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to={\"/places/new\"}>Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.imageUrl}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/Loading/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/Loading/LoadingSpinner\";\r\nimport { useHttp } from \"../../shared/hooks/useHttp\";\r\nexport const PLACE = [];\r\nfunction UserPlace() {\r\n  const userID = useParams().userId;\r\n  const [places, setPlaces] = useState();\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userID}`\r\n        );\r\n        setPlaces(data.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userID]);\r\n  const deletePlacehandler = (pid) => {\r\n    setPlaces((prev) => prev.filter((p) => p.id !== pid));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && !!places && (\r\n        <PlaceList items={places} onDelete={deletePlacehandler} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserPlace;\r\n"],"sourceRoot":""}